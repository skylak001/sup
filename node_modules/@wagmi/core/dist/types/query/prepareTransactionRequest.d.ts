import { type PrepareTransactionRequestParameterType as viem_PrepareTransactionRequestParameterType } from 'viem';
import { type PrepareTransactionRequestParameters, type PrepareTransactionRequestReturnType } from '../actions/prepareTransactionRequest.js';
import { type Config } from '../createConfig.js';
import { type ScopeKeyParameter } from '../types/properties.js';
import { type UnionPartial } from '../types/utils.js';
export type PrepareTransactionRequestOptions<parameterType extends viem_PrepareTransactionRequestParameterType, config extends Config, chainId extends config['chains'][number]['id'] | undefined> = UnionPartial<PrepareTransactionRequestParameters<parameterType, config, chainId>> & ScopeKeyParameter;
export declare function prepareTransactionRequestQueryOptions<config extends Config, parameterType extends viem_PrepareTransactionRequestParameterType, chainId extends config['chains'][number]['id'] | undefined>(config: config, options?: PrepareTransactionRequestOptions<parameterType, config, chainId>): {
    readonly queryFn: ({ queryKey }: {
        queryKey: readonly ["prepareTransactionRequest", Omit<PrepareTransactionRequestOptions<parameterType, config, chainId>, "connector">];
        signal: AbortSignal;
        meta: Record<string, unknown> | undefined;
    }) => Promise<PrepareTransactionRequestQueryFnData<parameterType, config, chainId>>;
    readonly queryKey: readonly ["prepareTransactionRequest", Omit<PrepareTransactionRequestOptions<parameterType, config, chainId>, "connector">];
};
export type PrepareTransactionRequestQueryFnData<parameterType extends viem_PrepareTransactionRequestParameterType, config extends Config, chainId extends config['chains'][number]['id'] | undefined> = PrepareTransactionRequestReturnType<parameterType, config, chainId>;
export type PrepareTransactionRequestData<parameterType extends viem_PrepareTransactionRequestParameterType, config extends Config, chainId extends config['chains'][number]['id'] | undefined> = PrepareTransactionRequestQueryFnData<parameterType, config, chainId>;
export declare function prepareTransactionRequestQueryKey<config extends Config, parameterType extends viem_PrepareTransactionRequestParameterType, chainId extends config['chains'][number]['id'] | undefined>(options: PrepareTransactionRequestOptions<parameterType, config, chainId>): readonly ["prepareTransactionRequest", Omit<PrepareTransactionRequestOptions<parameterType, config, chainId>, "connector">];
export type PrepareTransactionRequestQueryKey<parameterType extends viem_PrepareTransactionRequestParameterType, config extends Config, chainId extends config['chains'][number]['id'] | undefined> = ReturnType<typeof prepareTransactionRequestQueryKey<config, parameterType, chainId>>;
//# sourceMappingURL=prepareTransactionRequest.d.ts.map